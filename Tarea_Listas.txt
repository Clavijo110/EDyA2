push(): Adds one or more elements to the end of an array.
pop(): Removes the last element from an array.
shift(): Removes the first element from an array.
unshift(): Adds one or more elements to the beginning of an array.
concat(): Combines two or more arrays.
slice(): Creates a new array by extracting a portion of an existing array.
splice(): Adds or removes elements from an array at a specific index.
join(): Joins all elements of an array into a single string.
indexOf(): Returns the index of the first occurrence of a specified element.
length: Property that gives the number of elements in an array.


let numbers = [1, 2, 3, 4, 5];

// forEach - Itera sobre cada elemento del array
numbers.forEach(num => console.log(num));

// map - Crea un nuevo array con los resultados de la llamada a la función proporcionada
let squares = numbers.map(num => num * num);
console.log(squares);

// filter - Crea un nuevo array con todos los elementos que pasen el test de la función dada
let evenNumbers = numbers.filter(num => num % 2 === 0);
console.log(evenNumbers);

// reduce - Aplica una función a un acumulador y a cada valor de array (de izquierda a derecha) para reducirlo a un solo valor
let sum = numbers.reduce((total, num) => total + num, 0);
console.log(sum);

// find - Devuelve el primer valor del array que cumpla la función de prueba proporcionada
let firstEven = numbers.find(num => num % 2 === 0);
console.log(firstEven);

// some - Comprueba si al menos un elemento del array cumple la condición dada
let hasEven = numbers.some(num => num % 2 === 0);
console.log(hasEven);

// every - Comprueba si todos los elementos del array cumplen la condición dada
let allEven = numbers.every(num => num % 2 === 0);
console.log(allEven);

// sort - Ordena los elementos del array en su lugar y lo devuelve
let sortedNumbers = numbers.sort((a, b) => a - b);
console.log(sortedNumbers);

// reverse - Invierte el orden de los elementos del array
let reversedNumbers = numbers.reverse();
console.log(reversedNumbers);

// concat - Combina dos o más arrays
let moreNumbers = [6, 7, 8];
let combinedNumbers = numbers.concat(moreNumbers);
console.log(combinedNumbers);

// slice - Devuelve una copia superficial de una porción del array
let slicedNumbers = numbers.slice(1, 3);
console.log(slicedNumbers);

// splice - Cambia el contenido de un array eliminando o reemplazando elementos existentes y/o agregando nuevos elementos
numbers.splice(1, 2, 10, 11);
console.log(numbers);

// includes - Comprueba si un array incluye un determinado elemento
let hasOne = numbers.includes(1);
console.log(hasOne);